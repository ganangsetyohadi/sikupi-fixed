CREATE TYPE "product_kind" AS ENUM (
  'ampas',
  'turunan'
);

CREATE TYPE "product_category" AS ENUM (
  'ampas_kopi',
  'briket',
  'pulp',
  'scrub',
  'pupuk',
  'pakan_ternak',
  'lainnya'
);

CREATE TYPE "coffee_type" AS ENUM (
  'arabika',
  'robusta',
  'mix',
  'unknown'
);

CREATE TYPE "grind_level" AS ENUM (
  'halus',
  'sedang',
  'kasar',
  'unknown'
);

CREATE TYPE "condition" AS ENUM (
  'basah',
  'kering',
  'unknown'
);

CREATE TYPE "order_status" AS ENUM (
  'new',
  'pending_payment',
  'paid',
  'packed',
  'shipped',
  'completed',
  'cancelled'
);

CREATE TYPE "user_role" AS ENUM (
  'admin',
  'buyer'
);

CREATE TABLE "auth_users" (
  "id" uuid PRIMARY KEY
);

CREATE TABLE "profiles" (
  "id" uuid PRIMARY KEY,
  "full_name" text,
  "phone" text,
  "role" user_role NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "updated_at" timestamp NOT NULL DEFAULT (now())
);

CREATE TABLE "products" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "kind" product_kind NOT NULL,
  "category" product_category NOT NULL,
  "sku" text UNIQUE,
  "title" text NOT NULL,
  "slug" text UNIQUE,
  "description" text,
  "coffee_type" coffee_type NOT NULL DEFAULT 'unknown',
  "grind_level" grind_level NOT NULL DEFAULT 'unknown',
  "condition" condition NOT NULL DEFAULT 'unknown',
  "price_idr" bigint NOT NULL,
  "stock_qty" numeric(12,3) NOT NULL DEFAULT 0,
  "unit" text NOT NULL DEFAULT 'kg',
  "image_urls" json,
  "published" boolean NOT NULL DEFAULT false,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "updated_at" timestamp NOT NULL DEFAULT (now())
);

CREATE TABLE "orders" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "buyer_id" uuid NOT NULL,
  "status" order_status NOT NULL DEFAULT 'new',
  "subtotal_idr" bigint NOT NULL DEFAULT 0,
  "shipping_fee_idr" bigint NOT NULL DEFAULT 0,
  "total_idr" bigint NOT NULL DEFAULT 0,
  "shipping_address" json,
  "biteship_order_id" text,
  "courier_company" text,
  "courier_service" text,
  "tracking_number" text,
  "shipping_status" text,
  "midtrans_order_id" text,
  "midtrans_token" text,
  "payment_status" text,
  "paid_at" timestamp,
  "notes" text,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "updated_at" timestamp NOT NULL DEFAULT (now())
);

CREATE TABLE "order_items" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "order_id" bigint NOT NULL,
  "product_id" bigint NOT NULL,
  "product_title" text NOT NULL,
  "price_idr" bigint NOT NULL,
  "qty" numeric(12,3) NOT NULL,
  "unit" text NOT NULL DEFAULT 'kg',
  "coffee_type" coffee_type,
  "grind_level" grind_level,
  "condition" condition,
  "image_url" text
);

CREATE TABLE "product_reviews" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "product_id" bigint NOT NULL,
  "order_item_id" bigint NOT NULL,
  "buyer_id" uuid NOT NULL,
  "rating" smallint NOT NULL,
  "comment" text,
  "created_at" timestamp NOT NULL DEFAULT (now())
);

CREATE TABLE "magazine_posts" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" text NOT NULL,
  "slug" text UNIQUE,
  "summary" text,
  "content_md" text,
  "tags" json,
  "published" boolean NOT NULL DEFAULT false,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "updated_at" timestamp NOT NULL DEFAULT (now())
);

CREATE TABLE "analyzer_jobs" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "product_id" bigint,
  "buyer_id" uuid,
  "images" json,
  "output" json,
  "created_at" timestamp NOT NULL DEFAULT (now())
);

CREATE INDEX "idx_profiles_role" ON "profiles" ("role");

CREATE INDEX "idx_products_published" ON "products" ("published");

CREATE INDEX "idx_products_kind_category" ON "products" ("kind", "category");

CREATE INDEX "idx_products_ampas_attrs" ON "products" ("coffee_type", "grind_level", "condition");

CREATE INDEX "idx_orders_buyer" ON "orders" ("buyer_id");

CREATE INDEX "idx_orders_status" ON "orders" ("status");

CREATE INDEX "idx_order_items_order" ON "order_items" ("order_id");

CREATE INDEX "idx_order_items_product" ON "order_items" ("product_id");

CREATE UNIQUE INDEX "uq_reviews_order_item" ON "product_reviews" ("order_item_id");

CREATE INDEX "idx_reviews_product" ON "product_reviews" ("product_id");

CREATE INDEX "idx_reviews_buyer" ON "product_reviews" ("buyer_id");

CREATE INDEX "idx_magazine_published" ON "magazine_posts" ("published");

CREATE INDEX "idx_analyzer_product" ON "analyzer_jobs" ("product_id");

COMMENT ON COLUMN "auth_users"."id" IS 'Placeholder untuk Supabase auth.users.id';

COMMENT ON COLUMN "profiles"."id" IS 'FK ke Supabase auth.users.id';

COMMENT ON TABLE "products" IS 'Aturan bisnis (SQL level, opsional di tahap lanjut):
- Jika kind = ampas => category HARUS ampas_kopi.
- Jika kind = turunan => category TIDAK boleh ampas_kopi.
- Atribut ampas (coffee_type, grind_level, kondisi) hanya relevan untuk kind=ampas,
  untuk turunan dibiarkan ''unknown'' di MVP.
';

COMMENT ON COLUMN "products"."kind" IS 'ampas / turunan';

COMMENT ON COLUMN "products"."category" IS 'ampas_kopi, briket, pulp, scrub, pupuk, pakan_ternak, lainnya';

COMMENT ON COLUMN "products"."price_idr" IS 'Harga per unit (mis. per kg)';

COMMENT ON COLUMN "products"."stock_qty" IS 'Stok dalam kg';

COMMENT ON COLUMN "products"."image_urls" IS 'Array URL gambar (JSON)';

COMMENT ON COLUMN "orders"."shipping_address" IS 'Snapshot alamat & detail Biteship';

COMMENT ON COLUMN "order_items"."product_title" IS 'Snapshot judul produk saat order';

COMMENT ON COLUMN "order_items"."qty" IS 'Jumlah (kg)';

COMMENT ON COLUMN "product_reviews"."rating" IS '1..5';

COMMENT ON COLUMN "magazine_posts"."tags" IS 'Array tag (JSON)';

COMMENT ON COLUMN "analyzer_jobs"."images" IS 'Array URL input';

COMMENT ON COLUMN "analyzer_jobs"."output" IS '{coffee_type, grind_level, price_min_idr, model_version, ...}';

ALTER TABLE "profiles" ADD FOREIGN KEY ("id") REFERENCES "auth_users" ("id");

ALTER TABLE "orders" ADD FOREIGN KEY ("buyer_id") REFERENCES "profiles" ("id");

ALTER TABLE "order_items" ADD FOREIGN KEY ("order_id") REFERENCES "orders" ("id");

ALTER TABLE "order_items" ADD FOREIGN KEY ("product_id") REFERENCES "products" ("id");

ALTER TABLE "product_reviews" ADD FOREIGN KEY ("product_id") REFERENCES "products" ("id");

ALTER TABLE "product_reviews" ADD FOREIGN KEY ("order_item_id") REFERENCES "order_items" ("id");

ALTER TABLE "product_reviews" ADD FOREIGN KEY ("buyer_id") REFERENCES "profiles" ("id");

ALTER TABLE "analyzer_jobs" ADD FOREIGN KEY ("product_id") REFERENCES "products" ("id");

ALTER TABLE "analyzer_jobs" ADD FOREIGN KEY ("buyer_id") REFERENCES "profiles" ("id");
