-- Sikupi Database Schema - Fixed Version
-- This migration creates the core tables for the coffee grounds marketplace

-- Create custom types (enums)
CREATE TYPE "product_kind" AS ENUM (
  'ampas',
  'turunan'
);

CREATE TYPE "product_category" AS ENUM (
  'ampas_kopi',
  'briket',
  'pulp',
  'scrub',
  'pupuk',
  'pakan_ternak',
  'lainnya'
);

CREATE TYPE "coffee_type" AS ENUM (
  'arabika',
  'robusta',
  'mix',
  'unknown'
);

CREATE TYPE "grind_level" AS ENUM (
  'halus',
  'sedang',
  'kasar',
  'unknown'
);

CREATE TYPE "condition" AS ENUM (
  'basah',
  'kering',
  'unknown'
);

CREATE TYPE "order_status" AS ENUM (
  'new',
  'pending_payment',
  'paid',
  'packed',
  'shipped',
  'completed',
  'cancelled'
);

CREATE TYPE "user_role" AS ENUM (
  'admin',
  'buyer'
);

-- Profiles table (extends Supabase auth.users)
CREATE TABLE "profiles" (
  "id" uuid PRIMARY KEY REFERENCES auth.users(id) ON DELETE CASCADE,
  "full_name" text,
  "phone" text,
  "role" user_role NOT NULL DEFAULT 'buyer',
  "created_at" timestamp with time zone NOT NULL DEFAULT NOW(),
  "updated_at" timestamp with time zone NOT NULL DEFAULT NOW()
);

-- Products table
CREATE TABLE "products" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "kind" product_kind NOT NULL,
  "category" product_category NOT NULL,
  "sku" text UNIQUE,
  "title" text NOT NULL,
  "slug" text UNIQUE,
  "description" text,
  "coffee_type" coffee_type NOT NULL DEFAULT 'unknown',
  "grind_level" grind_level NOT NULL DEFAULT 'unknown',
  "condition" condition NOT NULL DEFAULT 'unknown',
  "price_idr" bigint NOT NULL CHECK (price_idr > 0),
  "stock_qty" numeric(12,3) NOT NULL DEFAULT 0 CHECK (stock_qty >= 0),
  "unit" text NOT NULL DEFAULT 'kg',
  "image_urls" json,
  "published" boolean NOT NULL DEFAULT false,
  "created_at" timestamp with time zone NOT NULL DEFAULT NOW(),
  "updated_at" timestamp with time zone NOT NULL DEFAULT NOW()
);

-- Orders table
CREATE TABLE "orders" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "buyer_id" uuid NOT NULL REFERENCES profiles(id) ON DELETE CASCADE,
  "status" order_status NOT NULL DEFAULT 'new',
  "subtotal_idr" bigint NOT NULL DEFAULT 0 CHECK (subtotal_idr >= 0),
  "shipping_fee_idr" bigint NOT NULL DEFAULT 0 CHECK (shipping_fee_idr >= 0),
  "total_idr" bigint NOT NULL DEFAULT 0 CHECK (total_idr >= 0),
  "shipping_address" json,
  "biteship_order_id" text,
  "courier_company" text,
  "courier_service" text,
  "tracking_number" text,
  "shipping_status" text,
  "midtrans_order_id" text,
  "midtrans_token" text,
  "payment_status" text,
  "paid_at" timestamp with time zone,
  "notes" text,
  "created_at" timestamp with time zone NOT NULL DEFAULT NOW(),
  "updated_at" timestamp with time zone NOT NULL DEFAULT NOW()
);

-- Order items table
CREATE TABLE "order_items" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "order_id" bigint NOT NULL REFERENCES orders(id) ON DELETE CASCADE,
  "product_id" bigint NOT NULL REFERENCES products(id) ON DELETE RESTRICT,
  "product_title" text NOT NULL,
  "price_idr" bigint NOT NULL CHECK (price_idr > 0),
  "qty" numeric(12,3) NOT NULL CHECK (qty > 0),
  "unit" text NOT NULL DEFAULT 'kg',
  "coffee_type" coffee_type,
  "grind_level" grind_level,
  "condition" condition,
  "image_url" text
);

-- Product reviews table
CREATE TABLE "product_reviews" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "product_id" bigint NOT NULL REFERENCES products(id) ON DELETE CASCADE,
  "order_item_id" bigint NOT NULL REFERENCES order_items(id) ON DELETE CASCADE,
  "buyer_id" uuid NOT NULL REFERENCES profiles(id) ON DELETE CASCADE,
  "rating" smallint NOT NULL CHECK (rating >= 1 AND rating <= 5),
  "comment" text,
  "created_at" timestamp with time zone NOT NULL DEFAULT NOW()
);

-- Magazine posts table
CREATE TABLE "magazine_posts" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" text NOT NULL,
  "slug" text UNIQUE,
  "summary" text,
  "content_md" text,
  "tags" json,
  "published" boolean NOT NULL DEFAULT false,
  "created_at" timestamp with time zone NOT NULL DEFAULT NOW(),
  "updated_at" timestamp with time zone NOT NULL DEFAULT NOW()
);

-- AI analyzer jobs table (optional audit trail)
CREATE TABLE "analyzer_jobs" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "product_id" bigint REFERENCES products(id) ON DELETE SET NULL,
  "buyer_id" uuid REFERENCES profiles(id) ON DELETE SET NULL,
  "images" json,
  "output" json,
  "created_at" timestamp with time zone NOT NULL DEFAULT NOW()
);

-- Create indexes for performance
CREATE INDEX "idx_profiles_role" ON "profiles" ("role");
CREATE INDEX "idx_products_published" ON "products" ("published");
CREATE INDEX "idx_products_kind_category" ON "products" ("kind", "category");
CREATE INDEX "idx_products_ampas_attrs" ON "products" ("coffee_type", "grind_level", "condition");
CREATE INDEX "idx_orders_buyer" ON "orders" ("buyer_id");
CREATE INDEX "idx_orders_status" ON "orders" ("status");
CREATE INDEX "idx_order_items_order" ON "order_items" ("order_id");
CREATE INDEX "idx_order_items_product" ON "order_items" ("product_id");
CREATE UNIQUE INDEX "uq_reviews_order_item" ON "product_reviews" ("order_item_id");
CREATE INDEX "idx_reviews_product" ON "product_reviews" ("product_id");
CREATE INDEX "idx_reviews_buyer" ON "product_reviews" ("buyer_id");
CREATE INDEX "idx_magazine_published" ON "magazine_posts" ("published");
CREATE INDEX "idx_analyzer_product" ON "analyzer_jobs" ("product_id");

-- Add comments for documentation
COMMENT ON TABLE "products" IS 'Business rules: If kind=ampas then category must be ampas_kopi. If kind=turunan then category cannot be ampas_kopi.';
COMMENT ON COLUMN "products"."price_idr" IS 'Price per unit (e.g., per kg) in Indonesian Rupiah';
COMMENT ON COLUMN "products"."stock_qty" IS 'Stock quantity in kg';
COMMENT ON COLUMN "products"."image_urls" IS 'Array of image URLs (JSON)';
COMMENT ON COLUMN "orders"."shipping_address" IS 'Snapshot of shipping address and Biteship details';
COMMENT ON COLUMN "order_items"."product_title" IS 'Snapshot of product title at time of order';
COMMENT ON COLUMN "order_items"."qty" IS 'Quantity in kg';
COMMENT ON COLUMN "product_reviews"."rating" IS 'Rating from 1 to 5';
COMMENT ON COLUMN "magazine_posts"."tags" IS 'Array of tags (JSON)';
COMMENT ON COLUMN "analyzer_jobs"."images" IS 'Array of input image URLs';
COMMENT ON COLUMN "analyzer_jobs"."output" IS 'AI analysis output: {coffee_type, grind_level, price_min_idr, model_version, ...}';

-- Create trigger function for updating updated_at timestamps
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

-- Create triggers for updated_at
CREATE TRIGGER update_profiles_updated_at BEFORE UPDATE ON profiles FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
CREATE TRIGGER update_products_updated_at BEFORE UPDATE ON products FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
CREATE TRIGGER update_orders_updated_at BEFORE UPDATE ON orders FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
CREATE TRIGGER update_magazine_posts_updated_at BEFORE UPDATE ON magazine_posts FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();